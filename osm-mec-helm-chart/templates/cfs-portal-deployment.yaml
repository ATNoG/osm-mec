apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cfs-portal
  name: cfs-portal
spec:
  replicas: {{ .Values.cfsPortal.deployment.replicas }}
  selector:
    matchLabels:
      app: cfs-portal
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cfs-portal
    spec:
      containers:
        - env:
          - name: CHOKIDAR_USEPOLLING
            value: "true"
          - name: REACT_APP_OSS_HOST
            value: "{{ .Values.oss.host }}"
          - name: REACT_APP_OSS_PORT
            value: "{{ .Values.oss.service.oss_port }}"
          - name: WDS_SOCKET_PORT
            value: "{{ .Values.oss.service.ws_port }}"
          image: {{ .Values.cfsPortal.deployment.image }}
          imagePullPolicy: {{ .Values.cfsPortal.deployment.imagePullPolicy }}
          name: cfs-portal
          ports:
            - containerPort: {{ .Values.cfsPortal.service.targetPort }}
              protocol: TCP
      restartPolicy: {{ .Values.cfsPortal.deployment.restartPolicy }}
      volumes:
        - name: cfs-portal-claim0
          persistentVolumeClaim:
            claimName: cfs-portal-claim0
