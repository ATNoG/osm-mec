services:
  cfs-portal:
    build: ./cfs-portal
    ports:
      - "3000:3000"
    volumes:
      - /usr/app/node_modules
      - ./cfs-portal:/usr/app
    environment:
      CHOKIDAR_USEPOLLING: "true"
    networks:
      - temp-network

  oss:
    build: ./oss
    ports:
      - "8080:8080"
      - "8001:8001"
    expose:
      - "8080"
    volumes:
      - ./oss:/usr/app
    depends_on:
      - mongo
    environment:
      - OSM_HOSTNAME=nbi.10.255.32.132.nip.io
      - OSS_PORT=8080
      - OSS_WS_PORT=8001
      - KAFKA_BOOTSTRAP_SERVERS=10.255.32.132:31999
      - MONGO_USER=root
      - MONGO_PASSWORD=pass
    restart: on-failure
    networks:
      - temp-network

  meao:
    build: ./meao
    volumes:
      - ./meao:/usr/app
    depends_on:
      # - kafka
      # - zookeeper
      - mongo
    environment:
      - OSM_HOSTNAME=nbi.10.255.32.132.nip.io
      - KAFKA_BOOTSTRAP_SERVERS=10.255.32.132:31999
      - MONGO_USER=root
      - MONGO_PASSWORD=pass
    restart: on-failure
    networks:
      - temp-network

  mongo:
    image: mongo
    volumes:
      - app-mongo-db-data:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "pass"
    networks:
      - temp-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "root"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "pass"
      ME_CONFIG_MONGODB_URL: mongodb://root:pass@mongo:27017/
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    networks:
      - temp-network

volumes:
  app-mongo-db-data:

networks:
  temp-network:
    external: true
    name: temp-network
